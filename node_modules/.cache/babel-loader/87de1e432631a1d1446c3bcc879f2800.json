{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.injectScriptTag = exports.getScripts = exports.INJECTED_SCRIPT = exports.EXTERNAL_SCRIPT = exports.ANY_SCRIPT = void 0;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar ANY_SCRIPT = /<script[\\s\\S]*?>[\\s\\S]*?<\\/script>/gi;\nexports.ANY_SCRIPT = ANY_SCRIPT;\nvar EXTERNAL_SCRIPT = /<script[^>]+src=(['\"])(.*?)\\1/i;\nexports.EXTERNAL_SCRIPT = EXTERNAL_SCRIPT;\nvar INJECTED_SCRIPT = /<script[\\s\\S]*?>[\\s\\S]*?createElement[\\s\\S]*?src\\s?=\\s?(['\"])(.*?)\\1/i;\n/**\n * Find the URI for the external file loaded from a script tag.\n *\n * @param {String} script The string HTML of a <script> tag.\n * @returns {String|null} The URI of the requested external script, otherwise null.\n */\n\nexports.INJECTED_SCRIPT = INJECTED_SCRIPT;\n\nvar extractExternalScriptURL = function extractExternalScriptURL(script) {\n  var match = script.match(EXTERNAL_SCRIPT); // Return null if no match, otherwise return the second capture group.\n\n  return match && match[2];\n};\n/**\n * Find the URI for a script being injected from inline JS.\n *\n * @param {String} script The string HTML of a <script> tag.\n * @returns {String|null} The URI of a script being injected from inline JS, otherwise null.\n */\n\n\nvar extractInjectedScriptURL = function extractInjectedScriptURL(script) {\n  var match = script.match(INJECTED_SCRIPT); // Return null if no match, otherwise return the second capture group.\n\n  return match && match[2];\n};\n/**\n * Match either external or inline-script-injected script tag source URIs.\n *\n * @param {String} script The string HTML of a <script> tag\n * @returns {String|null} The URI of the script file this script tag loads, or null.\n */\n\n\nvar extractScriptURL = function extractScriptURL(script) {\n  return extractExternalScriptURL(script) || extractInjectedScriptURL(script);\n};\n/**\n * Remove duplicate or undefined values from an array of strings.\n *\n * @param {String[]} Array script file URIs.\n */\n\n\nvar uniqueURIs = function uniqueURIs(scripts) {\n  return Object.keys(scripts.reduce(function (keys, script) {\n    return script ? _objectSpread({}, keys, _defineProperty({}, script, true)) : keys;\n  }, {}));\n};\n/**\n * Parse a string of HTML and identify the JS files loaded by any contained script tags.\n *\n * @param {String} string String containing HTML markup which may include script tags.\n * @returns {String[]} Array of any script URIs we believe to be loaded in this HTML.\n */\n\n\nvar getScripts = function getScripts(string) {\n  var scripts = string.match(/<script[\\s\\S]*?<\\/script>/gi);\n  return scripts ? uniqueURIs(scripts.map(extractScriptURL)) : [];\n};\n/**\n * Create & inject a new <script> tag into the page.\n *\n * @param {String} src A script URL.\n * @returns {HTMLElement} The injected script tag.\n */\n\n\nexports.getScripts = getScripts;\n\nvar injectScriptTag = function injectScriptTag(src) {\n  var scriptTag = document.createElement('script'); // Workaround for HTML-encoded entities in URI (relevant to Facebook)\n\n  scriptTag.src = src.replace('&amp;', '&');\n  document.head.appendChild(scriptTag);\n  return scriptTag;\n};\n\nexports.injectScriptTag = injectScriptTag;","map":{"version":3,"sources":["/Users/anhad/Development/scova-org/node_modules/react-oembed-container/dist/helpers.js"],"names":["Object","defineProperty","exports","value","injectScriptTag","getScripts","INJECTED_SCRIPT","EXTERNAL_SCRIPT","ANY_SCRIPT","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","configurable","writable","extractExternalScriptURL","script","match","extractInjectedScriptURL","extractScriptURL","uniqueURIs","scripts","reduce","string","map","src","scriptTag","document","createElement","replace","head","appendChild"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,eAAR,GAA0BF,OAAO,CAACG,UAAR,GAAqBH,OAAO,CAACI,eAAR,GAA0BJ,OAAO,CAACK,eAAR,GAA0BL,OAAO,CAACM,UAAR,GAAqB,KAAK,CAA7H;;AAEA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGZ,MAAM,CAACY,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIV,MAAM,CAACa,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGd,MAAM,CAACa,qBAAP,CAA6BH,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBG,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOhB,MAAM,CAACiB,wBAAP,CAAgCP,MAAhC,EAAwCM,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GN,IAAAA,IAAI,CAACO,IAAL,CAAUC,KAAV,CAAgBR,IAAhB,EAAsBE,OAAtB;AAAiC;;AAAC,SAAOF,IAAP;AAAc;;AAErV,SAASS,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEd,MAAAA,OAAO,CAACT,MAAM,CAAC0B,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAEC,QAAAA,eAAe,CAACP,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAI5B,MAAM,CAAC8B,yBAAX,EAAsC;AAAE9B,MAAAA,MAAM,CAAC+B,gBAAP,CAAwBT,MAAxB,EAAgCtB,MAAM,CAAC8B,yBAAP,CAAiCJ,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAEjB,MAAAA,OAAO,CAACT,MAAM,CAAC0B,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAE5B,QAAAA,MAAM,CAACC,cAAP,CAAsBqB,MAAtB,EAA8BM,GAA9B,EAAmC5B,MAAM,CAACiB,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAEthB,SAASO,eAAT,CAAyBG,GAAzB,EAA8BJ,GAA9B,EAAmCzB,KAAnC,EAA0C;AAAE,MAAIyB,GAAG,IAAII,GAAX,EAAgB;AAAEhC,IAAAA,MAAM,CAACC,cAAP,CAAsB+B,GAAtB,EAA2BJ,GAA3B,EAAgC;AAAEzB,MAAAA,KAAK,EAAEA,KAAT;AAAgBe,MAAAA,UAAU,EAAE,IAA5B;AAAkCe,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEF,IAAAA,GAAG,CAACJ,GAAD,CAAH,GAAWzB,KAAX;AAAmB;;AAAC,SAAO6B,GAAP;AAAa;;AAEjN,IAAIxB,UAAU,GAAG,sCAAjB;AACAN,OAAO,CAACM,UAAR,GAAqBA,UAArB;AACA,IAAID,eAAe,GAAG,gCAAtB;AACAL,OAAO,CAACK,eAAR,GAA0BA,eAA1B;AACA,IAAID,eAAe,GAAG,uEAAtB;AACA;;;;;;;AAOAJ,OAAO,CAACI,eAAR,GAA0BA,eAA1B;;AAEA,IAAI6B,wBAAwB,GAAG,SAASA,wBAAT,CAAkCC,MAAlC,EAA0C;AACvE,MAAIC,KAAK,GAAGD,MAAM,CAACC,KAAP,CAAa9B,eAAb,CAAZ,CADuE,CAC5B;;AAE3C,SAAO8B,KAAK,IAAIA,KAAK,CAAC,CAAD,CAArB;AACD,CAJD;AAKA;;;;;;;;AAQA,IAAIC,wBAAwB,GAAG,SAASA,wBAAT,CAAkCF,MAAlC,EAA0C;AACvE,MAAIC,KAAK,GAAGD,MAAM,CAACC,KAAP,CAAa/B,eAAb,CAAZ,CADuE,CAC5B;;AAE3C,SAAO+B,KAAK,IAAIA,KAAK,CAAC,CAAD,CAArB;AACD,CAJD;AAKA;;;;;;;;AAQA,IAAIE,gBAAgB,GAAG,SAASA,gBAAT,CAA0BH,MAA1B,EAAkC;AACvD,SAAOD,wBAAwB,CAACC,MAAD,CAAxB,IAAoCE,wBAAwB,CAACF,MAAD,CAAnE;AACD,CAFD;AAGA;;;;;;;AAOA,IAAII,UAAU,GAAG,SAASA,UAAT,CAAoBC,OAApB,EAA6B;AAC5C,SAAOzC,MAAM,CAACY,IAAP,CAAY6B,OAAO,CAACC,MAAR,CAAe,UAAU9B,IAAV,EAAgBwB,MAAhB,EAAwB;AACxD,WAAOA,MAAM,GAAGf,aAAa,CAAC,EAAD,EAAKT,IAAL,EAAWiB,eAAe,CAAC,EAAD,EAAKO,MAAL,EAAa,IAAb,CAA1B,CAAhB,GAAgExB,IAA7E;AACD,GAFkB,EAEhB,EAFgB,CAAZ,CAAP;AAGD,CAJD;AAKA;;;;;;;;AAQA,IAAIP,UAAU,GAAG,SAASA,UAAT,CAAoBsC,MAApB,EAA4B;AAC3C,MAAIF,OAAO,GAAGE,MAAM,CAACN,KAAP,CAAa,6BAAb,CAAd;AACA,SAAOI,OAAO,GAAGD,UAAU,CAACC,OAAO,CAACG,GAAR,CAAYL,gBAAZ,CAAD,CAAb,GAA+C,EAA7D;AACD,CAHD;AAIA;;;;;;;;AAQArC,OAAO,CAACG,UAAR,GAAqBA,UAArB;;AAEA,IAAID,eAAe,GAAG,SAASA,eAAT,CAAyByC,GAAzB,EAA8B;AAClD,MAAIC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAhB,CADkD,CACA;;AAElDF,EAAAA,SAAS,CAACD,GAAV,GAAgBA,GAAG,CAACI,OAAJ,CAAY,OAAZ,EAAqB,GAArB,CAAhB;AACAF,EAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,SAA1B;AACA,SAAOA,SAAP;AACD,CAND;;AAQA5C,OAAO,CAACE,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.injectScriptTag = exports.getScripts = exports.INJECTED_SCRIPT = exports.EXTERNAL_SCRIPT = exports.ANY_SCRIPT = void 0;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ANY_SCRIPT = /<script[\\s\\S]*?>[\\s\\S]*?<\\/script>/gi;\nexports.ANY_SCRIPT = ANY_SCRIPT;\nvar EXTERNAL_SCRIPT = /<script[^>]+src=(['\"])(.*?)\\1/i;\nexports.EXTERNAL_SCRIPT = EXTERNAL_SCRIPT;\nvar INJECTED_SCRIPT = /<script[\\s\\S]*?>[\\s\\S]*?createElement[\\s\\S]*?src\\s?=\\s?(['\"])(.*?)\\1/i;\n/**\n * Find the URI for the external file loaded from a script tag.\n *\n * @param {String} script The string HTML of a <script> tag.\n * @returns {String|null} The URI of the requested external script, otherwise null.\n */\n\nexports.INJECTED_SCRIPT = INJECTED_SCRIPT;\n\nvar extractExternalScriptURL = function extractExternalScriptURL(script) {\n  var match = script.match(EXTERNAL_SCRIPT); // Return null if no match, otherwise return the second capture group.\n\n  return match && match[2];\n};\n/**\n * Find the URI for a script being injected from inline JS.\n *\n * @param {String} script The string HTML of a <script> tag.\n * @returns {String|null} The URI of a script being injected from inline JS, otherwise null.\n */\n\n\nvar extractInjectedScriptURL = function extractInjectedScriptURL(script) {\n  var match = script.match(INJECTED_SCRIPT); // Return null if no match, otherwise return the second capture group.\n\n  return match && match[2];\n};\n/**\n * Match either external or inline-script-injected script tag source URIs.\n *\n * @param {String} script The string HTML of a <script> tag\n * @returns {String|null} The URI of the script file this script tag loads, or null.\n */\n\n\nvar extractScriptURL = function extractScriptURL(script) {\n  return extractExternalScriptURL(script) || extractInjectedScriptURL(script);\n};\n/**\n * Remove duplicate or undefined values from an array of strings.\n *\n * @param {String[]} Array script file URIs.\n */\n\n\nvar uniqueURIs = function uniqueURIs(scripts) {\n  return Object.keys(scripts.reduce(function (keys, script) {\n    return script ? _objectSpread({}, keys, _defineProperty({}, script, true)) : keys;\n  }, {}));\n};\n/**\n * Parse a string of HTML and identify the JS files loaded by any contained script tags.\n *\n * @param {String} string String containing HTML markup which may include script tags.\n * @returns {String[]} Array of any script URIs we believe to be loaded in this HTML.\n */\n\n\nvar getScripts = function getScripts(string) {\n  var scripts = string.match(/<script[\\s\\S]*?<\\/script>/gi);\n  return scripts ? uniqueURIs(scripts.map(extractScriptURL)) : [];\n};\n/**\n * Create & inject a new <script> tag into the page.\n *\n * @param {String} src A script URL.\n * @returns {HTMLElement} The injected script tag.\n */\n\n\nexports.getScripts = getScripts;\n\nvar injectScriptTag = function injectScriptTag(src) {\n  var scriptTag = document.createElement('script'); // Workaround for HTML-encoded entities in URI (relevant to Facebook)\n\n  scriptTag.src = src.replace('&amp;', '&');\n  document.head.appendChild(scriptTag);\n  return scriptTag;\n};\n\nexports.injectScriptTag = injectScriptTag;"]},"metadata":{},"sourceType":"script"}