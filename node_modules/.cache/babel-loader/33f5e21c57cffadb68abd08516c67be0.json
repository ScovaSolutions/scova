{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nvar ReactDom = _interopDefault(require('react-dom'));\n\nvar noScroll = _interopDefault(require('no-scroll'));\n\nvar cx = _interopDefault(require('classnames'));\n\nvar screenfull = _interopDefault(require('screenfull'));\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction CloseArrow(_ref) {\n  var className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\"]);\n\n  return React__default.createElement(\"div\", Object.assign({\n    className: className\n  }, props), React__default.createElement(\"svg\", {\n    fill: \"#ffffff\",\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\"\n  }, React__default.createElement(\"path\", {\n    d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n  })));\n}\n\nfunction PrevArrowButton(_ref2) {\n  var className = _ref2.className,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"className\"]);\n\n  return React__default.createElement(\"div\", Object.assign({\n    className: className\n  }, props), React__default.createElement(\"svg\", {\n    fill: \"#ffffff\",\n    width: \"36px\",\n    height: \"36px\",\n    viewBox: \"0 0 24 24\"\n  }, React__default.createElement(\"path\", {\n    d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n  })));\n}\n\nfunction NextArrowButton(_ref3) {\n  var className = _ref3.className,\n      props = _objectWithoutPropertiesLoose(_ref3, [\"className\"]);\n\n  return React__default.createElement(\"div\", Object.assign({\n    className: className\n  }, props), React__default.createElement(\"svg\", {\n    fill: \"#ffffff\",\n    width: \"36px\",\n    height: \"36px\",\n    viewBox: \"0 0 24 24\"\n  }, React__default.createElement(\"path\", {\n    d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n  })));\n}\n\nvar useEventListener = function useEventListener(active, eventName, handler, element) {\n  // Create a ref that stores handler\n  var savedHandler = React.useRef(); // Update ref.current value if handler changes.\n  // This allows our effect below to always get latest handler ...\n  // ... without us needing to pass it in effect deps array ...\n  // ... and potentially cause effect to re-run every render.\n\n  React.useEffect(function () {\n    savedHandler.current = handler;\n  }, [handler]);\n  React.useEffect(function () {\n    if (!element || !element.addEventListener) {\n      return;\n    } // Create event listener that calls handler function stored in ref\n\n\n    var eventListener = function eventListener(event) {\n      return savedHandler.current(event);\n    };\n\n    if (active) {\n      // Add event listener\n      element.addEventListener(eventName, eventListener);\n    } // Remove event listener on cleanup\n\n\n    return function () {\n      element.removeEventListener(eventName, eventListener);\n    };\n  }, // Re-run if eventName or element changes\n  [active, eventName, element]);\n};\n\nvar keycodes = {\n  esc: 27,\n  left: 37,\n  right: 39\n};\nvar classes = {\n  overlay: 'react-google-photo-overlay',\n  column: 'react-google-photo-column',\n  leftColumn: 'react-google-photo-left-column',\n  rightColumn: 'react-google-photo-right-column',\n  arrowButton: 'react-google-photo-arrow-button',\n  arrowButtonHide: 'react-google-photo-arrow-button-hide',\n  arrowButtonLeft: 'react-google-photo-arrow-button-left',\n  arrowButtonRight: 'react-google-photo-arrow-button-right',\n  arrowButtonReturn: 'react-google-photo-arrow-button-return',\n  image: 'react-google-photo-overlay-image',\n  imageOpen: 'react-google-photo-overlay-image-open',\n  animationIn: 'react-google-photo-fade-in',\n  animationOut: 'react-google-photo-fade-out'\n};\nvar isBrowser = typeof window !== 'undefined';\nvar Direction;\n\n(function (Direction) {\n  Direction[Direction[\"Prev\"] = 0] = \"Prev\";\n  Direction[Direction[\"Next\"] = 1] = \"Next\";\n})(Direction || (Direction = {}));\n\nvar GooglePhoto = function GooglePhoto(_ref) {\n  var _classNames$animation, _classNames$animation2, _cx2, _cx3, _cx4;\n\n  var open = _ref.open,\n      src = _ref.src,\n      _ref$srcIndex = _ref.srcIndex,\n      srcIndexProp = _ref$srcIndex === void 0 ? 0 : _ref$srcIndex,\n      fullscreen = _ref.fullscreen,\n      _ref$keyboardNavigati = _ref.keyboardNavigation,\n      keyboardNavigation = _ref$keyboardNavigati === void 0 ? true : _ref$keyboardNavigati,\n      _ref$closeOnEsc = _ref.closeOnEsc,\n      closeOnEsc = _ref$closeOnEsc === void 0 ? true : _ref$closeOnEsc,\n      _ref$mouseIdleTimeout = _ref.mouseIdleTimeout,\n      mouseIdleTimeout = _ref$mouseIdleTimeout === void 0 ? 5000 : _ref$mouseIdleTimeout,\n      _ref$animationDuratio = _ref.animationDuration,\n      animationDuration = _ref$animationDuratio === void 0 ? 250 : _ref$animationDuratio,\n      classNames = _ref.classNames,\n      onClose = _ref.onClose,\n      onChangeIndex = _ref.onChangeIndex;\n  var refContainer = React.useRef(null);\n  var refTimeoutMouseIdle = React.useRef(null);\n\n  var _useState = React.useState(open),\n      showPortal = _useState[0],\n      setShowPortal = _useState[1];\n\n  var _useState2 = React.useState({\n    width: isBrowser ? window.innerWidth : 0,\n    height: isBrowser ? window.innerHeight : 0\n  }),\n      windowSizes = _useState2[0],\n      setWindowSizes = _useState2[1];\n\n  var _useState3 = React.useState(false),\n      mouseIdle = _useState3[0],\n      setMouseIdle = _useState3[1];\n\n  var _useState4 = React.useState(srcIndexProp),\n      srcIndex = _useState4[0],\n      setSrcIndex = _useState4[1]; // Lazily create the ref instance\n  // https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n\n\n  if (refContainer.current === null && isBrowser) {\n    refContainer.current = document.createElement('div');\n  }\n\n  var handleOpen = function handleOpen() {\n    noScroll.on();\n    window.addEventListener('resize', handleWindowResize);\n\n    if (refContainer.current && !document.body.contains(refContainer.current)) {\n      document.body.appendChild(refContainer.current);\n    }\n\n    if (fullscreen && screenfull.isEnabled) {\n      screenfull.request();\n      screenfull.on('change', handleScreenfullChange);\n    }\n  };\n\n  var handleClose = function handleClose() {\n    window.removeEventListener('resize', handleWindowResize);\n\n    if (refContainer.current && document.body.contains(refContainer.current)) {\n      document.body.removeChild(refContainer.current);\n    }\n\n    if (screenfull.isEnabled) {\n      screenfull.exit();\n      screenfull.off('change', handleScreenfullChange);\n    }\n\n    noScroll.off();\n  };\n\n  var handleKeydown = function handleKeydown(e) {\n    if (e.keyCode === keycodes.left && keyboardNavigation) {\n      handleChangeIndex(Direction.Prev);\n    } else if (e.keyCode === keycodes.right && keyboardNavigation) {\n      handleChangeIndex(Direction.Next);\n    } else if (e.keyCode === keycodes.esc && closeOnEsc) {\n      onClose();\n    }\n  };\n\n  useEventListener(open, 'keydown', handleKeydown, isBrowser ? document : undefined);\n\n  var handleMousemove = function handleMousemove() {\n    // Hide the actions buttons when move do not move for x seconds\n    if (refTimeoutMouseIdle.current) {\n      clearTimeout(refTimeoutMouseIdle.current);\n    }\n\n    if (mouseIdle === true) {\n      setMouseIdle(false);\n    }\n\n    refTimeoutMouseIdle.current = setTimeout(function () {\n      setMouseIdle(true);\n    }, mouseIdleTimeout);\n  };\n\n  useEventListener(open, 'mousemove', handleMousemove, isBrowser ? document.querySelector('*') : undefined); // We listen to the srcIndexProp to update the internal state if the user manage the component\n\n  React.useEffect(function () {\n    setSrcIndex(srcIndexProp);\n  }, [srcIndexProp]);\n  React.useEffect(function () {\n    // When the modal is rendered first time we want to block the scroll\n    if (open) {\n      handleOpen();\n    }\n\n    return function () {\n      // When the component is unmounted directly we want to unblock the scroll\n      if (showPortal) {\n        handleClose();\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    // If the open prop is changing, we need to open the modal\n    if (open && !showPortal) {\n      setShowPortal(true);\n      handleOpen();\n    }\n  }, [open]);\n\n  var handleScreenfullChange = function handleScreenfullChange() {\n    if (screenfull.isEnabled && !screenfull.isFullscreen && open) {\n      onClose();\n    }\n  };\n\n  var handleWindowResize = function handleWindowResize() {\n    setWindowSizes({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  };\n\n  var handleChangeIndex = function handleChangeIndex(direction) {\n    if (direction === Direction.Prev && srcIndex !== 0) {\n      var newIndex = srcIndex - 1;\n      onChangeIndex ? onChangeIndex(newIndex) : setSrcIndex(newIndex);\n    } else if (direction === Direction.Next && src[srcIndex + 1]) {\n      var _newIndex = srcIndex + 1;\n\n      onChangeIndex ? onChangeIndex(_newIndex) : setSrcIndex(_newIndex);\n    }\n  };\n\n  var handleClickCloseArrow = function handleClickCloseArrow() {\n    onClose();\n  };\n\n  var handleAnimationEnd = function handleAnimationEnd() {\n    if (!open) {\n      setShowPortal(false);\n      handleClose();\n    } // if (onAnimationEnd) {\n    //   onAnimationEnd();\n    // }\n\n  };\n\n  var image = src[srcIndex];\n  var wrapperImageStyle = {\n    position: 'absolute',\n    overflow: 'hidden',\n    userSelect: 'none'\n  };\n  var imageWidth = image.width;\n  var imageHeight = image.height; // Adjust image ratio max with window size\n\n  if (imageWidth > windowSizes.width) {\n    var ratio = windowSizes.width / imageWidth;\n    imageHeight *= ratio;\n    imageWidth *= ratio;\n  }\n\n  if (imageHeight > windowSizes.height) {\n    var _ratio = windowSizes.height / imageHeight;\n\n    imageHeight *= _ratio;\n    imageWidth *= _ratio;\n  }\n\n  if (imageHeight > imageWidth || imageWidth < windowSizes.width) {\n    wrapperImageStyle.left = (windowSizes.width - imageWidth) / 2;\n    wrapperImageStyle.height = windowSizes.height;\n    wrapperImageStyle.width = imageWidth;\n  } else {\n    wrapperImageStyle.top = (windowSizes.height - imageHeight) / 2;\n    wrapperImageStyle.height = imageHeight;\n    wrapperImageStyle.width = windowSizes.width;\n  }\n\n  if (windowSizes.height > imageHeight) {\n    wrapperImageStyle.height = imageHeight;\n    wrapperImageStyle.top = (windowSizes.height - imageHeight) / 2;\n  } else if (windowSizes.width > imageWidth) {\n    wrapperImageStyle.height = windowSizes.height;\n    wrapperImageStyle.left = (windowSizes.width - imageWidth) / 2;\n  }\n\n  return showPortal && refContainer.current ? ReactDom.createPortal(React__default.createElement(\"div\", {\n    className: cx(classes.overlay, classNames === null || classNames === void 0 ? void 0 : classNames.overlay),\n    style: {\n      animation: (open ? (_classNames$animation = classNames === null || classNames === void 0 ? void 0 : classNames.animationIn) !== null && _classNames$animation !== void 0 ? _classNames$animation : classes.animationIn : (_classNames$animation2 = classNames === null || classNames === void 0 ? void 0 : classNames.animationOut) !== null && _classNames$animation2 !== void 0 ? _classNames$animation2 : classes.animationOut) + \" \" + animationDuration + \"ms\"\n    },\n    onAnimationEnd: handleAnimationEnd\n  }, React__default.createElement(\"div\", {\n    style: wrapperImageStyle\n  }, src.map(function (source, index) {\n    var _cx;\n\n    return React__default.createElement(\"img\", {\n      key: index,\n      src: source.src,\n      alt: source.alt,\n      width: wrapperImageStyle.width,\n      height: wrapperImageStyle.height,\n      className: cx(classes.image, classNames === null || classNames === void 0 ? void 0 : classNames.image, (_cx = {}, _cx[classes.imageOpen] = index === srcIndex, _cx))\n    });\n  })), srcIndex !== 0 && React__default.createElement(\"div\", {\n    className: cx(classes.column, classes.leftColumn),\n    onClick: function onClick() {\n      return handleChangeIndex(Direction.Prev);\n    }\n  }, React__default.createElement(PrevArrowButton, {\n    className: cx(classes.arrowButton, classes.arrowButtonLeft, (_cx2 = {}, _cx2[classes.arrowButtonHide] = mouseIdle, _cx2))\n  })), src[srcIndex + 1] && React__default.createElement(\"div\", {\n    className: cx(classes.column, classes.rightColumn),\n    onClick: function onClick() {\n      return handleChangeIndex(Direction.Next);\n    }\n  }, React__default.createElement(NextArrowButton, {\n    className: cx(classes.arrowButton, classes.arrowButtonRight, (_cx3 = {}, _cx3[classes.arrowButtonHide] = mouseIdle, _cx3))\n  })), React__default.createElement(\"div\", {\n    onClick: handleClickCloseArrow\n  }, React__default.createElement(CloseArrow, {\n    className: cx(classes.arrowButtonReturn, (_cx4 = {}, _cx4[classes.arrowButtonHide] = mouseIdle, _cx4))\n  }))), refContainer.current) : null;\n};\n\nexports.GooglePhoto = GooglePhoto;\nexports.default = GooglePhoto;","map":{"version":3,"sources":["../src/arrow.tsx","../src/useEventListener.ts","../src/google-photo.tsx"],"names":["CloseArrow","className","props","fill","width","height","viewBox","d","PrevArrowButton","NextArrowButton","useEventListener","savedHandler","useRef","useEffect","element","eventListener","keycodes","esc","left","right","classes","overlay","column","leftColumn","rightColumn","arrowButton","arrowButtonHide","arrowButtonLeft","arrowButtonRight","arrowButtonReturn","image","imageOpen","animationIn","animationOut","isBrowser","Direction","GooglePhoto","open","src","srcIndex","srcIndexProp","fullscreen","keyboardNavigation","closeOnEsc","mouseIdleTimeout","animationDuration","classNames","onClose","onChangeIndex","refContainer","refTimeoutMouseIdle","showPortal","setShowPortal","useState","windowSizes","setWindowSizes","window","mouseIdle","setMouseIdle","setSrcIndex","document","handleOpen","noScroll","screenfull","handleClose","handleKeydown","e","handleChangeIndex","handleMousemove","clearTimeout","setTimeout","handleScreenfullChange","handleWindowResize","innerHeight","direction","newIndex","handleClickCloseArrow","handleAnimationEnd","wrapperImageStyle","position","overflow","userSelect","imageWidth","imageHeight","ratio","cx","style","animation","onAnimationEnd","key","index","source","alt","onClick"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAMgBA,U,CAAAA,I,EAAAA;MAAaC,SAAAA,GAAAA,IAAAA,CAAAA,S;MAAcC,KAAAA,GAAAA,6BAAAA,CAAAA,IAAAA,EAAAA,CAAAA,WAAAA,CAAAA,C;;AACzC,SACE,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAKD,IAAAA,SAAS,EAAEA;AAAhB,GAAA,EAAA,KAAA,CAAA,EACE,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAKE,IAAAA,IAAI,EAAC,SAAV;AAAoBC,IAAAA,KAAK,EAAC,MAA1B;AAAiCC,IAAAA,MAAM,EAAC,MAAxC;AAA+CC,IAAAA,OAAO,EAAC;AAAvD,GAAA,EACE,cAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMC,IAAAA,CAAC,EAAC;AAAR,GAAA,CADF,CADF,CADF;AAOD;;SAEeC,e,CAAAA,K,EAAAA;MAAkBP,SAAAA,GAAAA,KAAAA,CAAAA,S;MAAcC,KAAAA,GAAAA,6BAAAA,CAAAA,KAAAA,EAAAA,CAAAA,WAAAA,CAAAA,C;;AAC9C,SACE,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAKD,IAAAA,SAAS,EAAEA;AAAhB,GAAA,EAAA,KAAA,CAAA,EACE,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAKE,IAAAA,IAAI,EAAC,SAAV;AAAoBC,IAAAA,KAAK,EAAC,MAA1B;AAAiCC,IAAAA,MAAM,EAAC,MAAxC;AAA+CC,IAAAA,OAAO,EAAC;AAAvD,GAAA,EACE,cAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMC,IAAAA,CAAC,EAAC;AAAR,GAAA,CADF,CADF,CADF;AAOD;;SAEeE,e,CAAAA,K,EAAAA;MAAkBR,SAAAA,GAAAA,KAAAA,CAAAA,S;MAAcC,KAAAA,GAAAA,6BAAAA,CAAAA,KAAAA,EAAAA,CAAAA,WAAAA,CAAAA,C;;AAC9C,SACE,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAKD,IAAAA,SAAS,EAAEA;AAAhB,GAAA,EAAA,KAAA,CAAA,EACE,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAKE,IAAAA,IAAI,EAAC,SAAV;AAAoBC,IAAAA,KAAK,EAAC,MAA1B;AAAiCC,IAAAA,MAAM,EAAC,MAAxC;AAA+CC,IAAAA,OAAO,EAAC;AAAvD,GAAA,EACE,cAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMC,IAAAA,CAAC,EAAC;AAAR,GAAA,CADF,CADF,CADF;AAOD;;AC9BM,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA,MAAA,EAAA,SAAA,EAAA,OAAA,EAAA,OAAA,EAAA;AAM9B;AACA,MAAMC,YAAY,GAAGC,KAAAA,CAArB,MAAqBA,EAArB,CAP8B,CAO9B;AAGA;AACA;AACA;;AACAC,EAAAA,KAAAA,CAAAA,SAAAA,CAAU,YAAA;AACRF,IAAAA,YAAY,CAAZA,OAAAA,GAAAA,OAAAA;AADO,GAATE,EAEG,CAFHA,OAEG,CAFHA;AAIAA,EAAAA,KAAAA,CAAAA,SAAAA,CACE,YAAA;AACE,QAAI,CAAA,OAAA,IAAY,CAACC,OAAO,CAAxB,gBAAA,EAA2C;AACzC;AACD,KAHH,CAGG;;;AAGD,QAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,KAAA,EAAA;AAAA,aAAcJ,YAAY,CAAZA,OAAAA,CAAd,KAAcA,CAAd;AAAtB,KAAA;;AAEA,QAAA,MAAA,EAAY;AACV;AACAG,MAAAA,OAAO,CAAPA,gBAAAA,CAAAA,SAAAA,EAAAA,aAAAA;AACD,KAXH,CAWG;;;AAGD,WAAO,YAAA;AACLA,MAAAA,OAAO,CAAPA,mBAAAA,CAAAA,SAAAA,EAAAA,aAAAA;AADF,KAAA;AAfK,GAATD,EAAS;AAoBP,GAAA,MAAA,EAAA,SAAA,EApBFA,OAoBE,CApBFA;AAjBK,CAAA;;ACIP,IAAMG,QAAQ,GAAG;AACfC,EAAAA,GAAG,EADY,EAAA;AAEfC,EAAAA,IAAI,EAFW,EAAA;AAGfC,EAAAA,KAAK,EAAE;AAHQ,CAAjB;AAMA,IAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EADO,4BAAA;AAEdC,EAAAA,MAAM,EAFQ,2BAAA;AAGdC,EAAAA,UAAU,EAHI,gCAAA;AAIdC,EAAAA,WAAW,EAJG,iCAAA;AAKdC,EAAAA,WAAW,EALG,iCAAA;AAMdC,EAAAA,eAAe,EAND,sCAAA;AAOdC,EAAAA,eAAe,EAPD,sCAAA;AAQdC,EAAAA,gBAAgB,EARF,uCAAA;AASdC,EAAAA,iBAAiB,EATH,wCAAA;AAUdC,EAAAA,KAAK,EAVS,kCAAA;AAWdC,EAAAA,SAAS,EAXK,uCAAA;AAYdC,EAAAA,WAAW,EAZG,4BAAA;AAadC,EAAAA,YAAY,EAAE;AAbA,CAAhB;AAgBA,IAAMC,SAAS,GAAG,OAAA,MAAA,KAAlB,WAAA;AAEA,IAAA,SAAA;;AAAA,CAAA,UAAKC,SAAL,EAAKA;AACHA,EAAAA,SAAAA,CAAAA,SAAAA,CAAAA,MAAAA,CAAAA,GAAAA,CAAAA,CAAAA,GAAAA,MAAAA;AACAA,EAAAA,SAAAA,CAAAA,SAAAA,CAAAA,MAAAA,CAAAA,GAAAA,CAAAA,CAAAA,GAAAA,MAAAA;AAFF,CAAA,EAAKA,SAAS,KAATA,SAAS,GAAd,EAAc,CAAd;;AA+EA,IAAaC,WAAW,GAAG,SAAdA,WAAc,CAAA,IAAA,EAAA;;;MACzBC,IAAAA,GAAAA,IAAAA,CAAAA,I;MACAC,GAAAA,GAAAA,IAAAA,CAAAA,G;2BACAC,Q;MAAUC,YAAAA,GAAAA,aAAAA,KAAAA,KAAAA,CAAAA,GAAe,CAAfA,GAAe,a;MACzBC,UAAAA,GAAAA,IAAAA,CAAAA,U;mCACAC,kB;MAAAA,kBAAAA,GAAAA,qBAAAA,KAAAA,KAAAA,CAAAA,GAAqB,IAArBA,GAAqB,qB;6BACrBC,U;MAAAA,UAAAA,GAAAA,eAAAA,KAAAA,KAAAA,CAAAA,GAAa,IAAbA,GAAa,e;mCACbC,gB;MAAAA,gBAAAA,GAAAA,qBAAAA,KAAAA,KAAAA,CAAAA,GAAmB,IAAnBA,GAAmB,qB;mCACnBC,iB;MAAAA,iBAAAA,GAAAA,qBAAAA,KAAAA,KAAAA,CAAAA,GAAoB,GAApBA,GAAoB,qB;MACpBC,UAAAA,GAAAA,IAAAA,CAAAA,U;MACAC,OAAAA,GAAAA,IAAAA,CAAAA,O;MACAC,aAAAA,GAAAA,IAAAA,CAAAA,a;AAEA,MAAMC,YAAY,GAAGrC,KAAAA,CAAAA,MAAAA,CAArB,IAAqBA,CAArB;AACA,MAAMsC,mBAAmB,GAAGtC,KAAAA,CAAAA,MAAAA,CAA5B,IAA4BA,CAA5B;;kBACoCyC,KAAAA,CAAAA,QAAAA,CAAQ,IAARA,C;MAA7BF,UAAAA,GAAAA,SAAAA,CAAAA,CAAAA,C;MAAYC,aAAAA,GAAAA,SAAAA,CAAAA,CAAAA,C;;mBACmBC,KAAAA,CAAAA,QAAAA,CAGnC;AACDjD,IAAAA,KAAK,EAAE8B,SAAS,GAAGsB,MAAM,CAAT,UAAA,GADf,CAAA;AAEDnD,IAAAA,MAAM,EAAE6B,SAAS,GAAGsB,MAAM,CAAT,WAAA,GAAwB;AAFxC,GAHmCH,C;MAA/BC,WAAAA,GAAAA,UAAAA,CAAAA,CAAAA,C;MAAaC,cAAAA,GAAAA,UAAAA,CAAAA,CAAAA,C;;mBAOcF,KAAAA,CAAAA,QAAAA,CAAQ,KAARA,C;MAA3BI,SAAAA,GAAAA,UAAAA,CAAAA,CAAAA,C;MAAWC,YAAAA,GAAAA,UAAAA,CAAAA,CAAAA,C;;mBACcL,KAAAA,CAAAA,QAAAA,CAAQ,YAARA,C;MAAzBd,QAAAA,GAAAA,UAAAA,CAAAA,CAAAA,C;MAAUoB,WAAAA,GAAAA,UAAAA,CAAAA,CAAAA,C,CAxBQ,CAwBRA;AAGjB;;;AACA,MAAIV,YAAY,CAAZA,OAAAA,KAAAA,IAAAA,IAAJ,SAAA,EAAgD;AAC9CA,IAAAA,YAAY,CAAZA,OAAAA,GAAuBW,QAAQ,CAARA,aAAAA,CAAvBX,KAAuBW,CAAvBX;AACD;;AAED,MAAMY,UAAU,GAAG,SAAbA,UAAa,GAAA;AACjBC,IAAAA,QAAQ,CAARA,EAAAA;AACAN,IAAAA,MAAM,CAANA,gBAAAA,CAAAA,QAAAA,EAAAA,kBAAAA;;AACA,QAAIP,YAAY,CAAZA,OAAAA,IAAwB,CAACW,QAAQ,CAARA,IAAAA,CAAAA,QAAAA,CAAuBX,YAAY,CAAhE,OAA6BW,CAA7B,EAA2E;AACzEA,MAAAA,QAAQ,CAARA,IAAAA,CAAAA,WAAAA,CAA0BX,YAAY,CAAtCW,OAAAA;AACD;;AACD,QAAInB,UAAU,IAAIsB,UAAU,CAA5B,SAAA,EAAwC;AACtCA,MAAAA,UAAU,CAAVA,OAAAA;AACAA,MAAAA,UAAU,CAAVA,EAAAA,CAAAA,QAAAA,EAAAA,sBAAAA;AACD;AATH,GAAA;;AAYA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAA;AAClBR,IAAAA,MAAM,CAANA,mBAAAA,CAAAA,QAAAA,EAAAA,kBAAAA;;AACA,QAAIP,YAAY,CAAZA,OAAAA,IAAwBW,QAAQ,CAARA,IAAAA,CAAAA,QAAAA,CAAuBX,YAAY,CAA/D,OAA4BW,CAA5B,EAA0E;AACxEA,MAAAA,QAAQ,CAARA,IAAAA,CAAAA,WAAAA,CAA0BX,YAAY,CAAtCW,OAAAA;AACD;;AACD,QAAIG,UAAU,CAAd,SAAA,EAA0B;AACxBA,MAAAA,UAAU,CAAVA,IAAAA;AACAA,MAAAA,UAAU,CAAVA,GAAAA,CAAAA,QAAAA,EAAAA,sBAAAA;AACD;;AACDD,IAAAA,QAAQ,CAARA,GAAAA;AATF,GAAA;;AAYA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAAA,CAAA,EAAA;AACpB,QAAIC,CAAC,CAADA,OAAAA,KAAclD,QAAQ,CAAtBkD,IAAAA,IAAJ,kBAAA,EAAuD;AACrDC,MAAAA,iBAAiB,CAAChC,SAAS,CAA3BgC,IAAiB,CAAjBA;AADF,KAAA,MAEO,IAAID,CAAC,CAADA,OAAAA,KAAclD,QAAQ,CAAtBkD,KAAAA,IAAJ,kBAAA,EAAwD;AAC7DC,MAAAA,iBAAiB,CAAChC,SAAS,CAA3BgC,IAAiB,CAAjBA;AADK,KAAA,MAEA,IAAID,CAAC,CAADA,OAAAA,KAAclD,QAAQ,CAAtBkD,GAAAA,IAAJ,UAAA,EAA8C;AACnDnB,MAAAA,OAAO;AACR;AAPH,GAAA;;AAUArC,EAAAA,gBAAgB,CAAA,IAAA,EAAA,SAAA,EAAA,aAAA,EAIdwB,SAAS,GAAA,QAAA,GAJXxB,SAAgB,CAAhBA;;AAOA,MAAM0D,eAAe,GAAG,SAAlBA,eAAkB,GAAA;AACtB;AACA,QAAIlB,mBAAmB,CAAvB,OAAA,EAAiC;AAC/BmB,MAAAA,YAAY,CAACnB,mBAAmB,CAAhCmB,OAAY,CAAZA;AACD;;AACD,QAAIZ,SAAS,KAAb,IAAA,EAAwB;AACtBC,MAAAA,YAAY,CAAZA,KAAY,CAAZA;AACD;;AACDR,IAAAA,mBAAmB,CAAnBA,OAAAA,GAA8BoB,UAAU,CAAC,YAAA;AACvCZ,MAAAA,YAAY,CAAZA,IAAY,CAAZA;AADsC,KAAA,EAAxCR,gBAAwC,CAAxCA;AARF,GAAA;;AAaAxC,EAAAA,gBAAgB,CAAA,IAAA,EAAA,WAAA,EAAA,eAAA,EAIdwB,SAAS,GAAG0B,QAAQ,CAARA,aAAAA,CAAH,GAAGA,CAAH,GAJXlD,SAAgB,CAAhBA,CAtFyB,CAsFzBA;;AAQAG,EAAAA,KAAAA,CAAAA,SAAAA,CAAU,YAAA;AACR8C,IAAAA,WAAW,CAAXA,YAAW,CAAXA;AADO,GAAT9C,EAEG,CAFHA,YAEG,CAFHA;AAIAA,EAAAA,KAAAA,CAAAA,SAAAA,CAAU,YAAA;AACR;AACA,QAAA,IAAA,EAAU;AACRgD,MAAAA,UAAU;AACX;;AACD,WAAO,YAAA;AACL;AACA,UAAA,UAAA,EAAgB;AACdG,QAAAA,WAAW;AACZ;AAJH,KAAA;AALO,GAATnD,EAAAA,EAAAA;AAaAA,EAAAA,KAAAA,CAAAA,SAAAA,CAAU,YAAA;AACR;AACA,QAAIwB,IAAI,IAAI,CAAZ,UAAA,EAAyB;AACvBe,MAAAA,aAAa,CAAbA,IAAa,CAAbA;AACAS,MAAAA,UAAU;AACX;AALM,GAAThD,EAMG,CANHA,IAMG,CANHA;;AAQA,MAAM0D,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAA;AAC7B,QAAIR,UAAU,CAAVA,SAAAA,IAAwB,CAACA,UAAU,CAAnCA,YAAAA,IAAJ,IAAA,EAA8D;AAC5DhB,MAAAA,OAAO;AACR;AAHH,GAAA;;AAMA,MAAMyB,kBAAkB,GAAG,SAArBA,kBAAqB,GAAA;AACzBjB,IAAAA,cAAc,CAAC;AAAEnD,MAAAA,KAAK,EAAEoD,MAAM,CAAf,UAAA;AAA4BnD,MAAAA,MAAM,EAAEmD,MAAM,CAACiB;AAA3C,KAAD,CAAdlB;AADF,GAAA;;AAIA,MAAMY,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,SAAA,EAAA;AACxB,QAAIO,SAAS,KAAKvC,SAAS,CAAvBuC,IAAAA,IAAgCnC,QAAQ,KAA5C,CAAA,EAAoD;AAClD,UAAMoC,QAAQ,GAAGpC,QAAQ,GAAzB,CAAA;AACAS,MAAAA,aAAa,GAAGA,aAAa,CAAhB,QAAgB,CAAhB,GAA6BW,WAAW,CAArDX,QAAqD,CAArDA;AAFF,KAAA,MAGO,IAAI0B,SAAS,KAAKvC,SAAS,CAAvBuC,IAAAA,IAAgCpC,GAAG,CAACC,QAAQ,GAAhD,CAAuC,CAAvC,EAAuD;AAC5D,UAAMoC,SAAQ,GAAGpC,QAAQ,GAAzB,CAAA;;AACAS,MAAAA,aAAa,GAAGA,aAAa,CAAhB,SAAgB,CAAhB,GAA6BW,WAAW,CAArDX,SAAqD,CAArDA;AACD;AAPH,GAAA;;AAUA,MAAM4B,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAA;AAC5B7B,IAAAA,OAAO;AADT,GAAA;;AAIA,MAAM8B,kBAAkB,GAAG,SAArBA,kBAAqB,GAAA;AACzB,QAAI,CAAJ,IAAA,EAAW;AACTzB,MAAAA,aAAa,CAAbA,KAAa,CAAbA;AACAY,MAAAA,WAAW;AACZ,KAJwB,CAIxB;AAGD;AACA;;AARF,GAAA;;AAWA,MAAMlC,KAAK,GAAGQ,GAAG,CAAjB,QAAiB,CAAjB;AACA,MAAMwC,iBAAiB,GAAkB;AACvCC,IAAAA,QAAQ,EAD+B,UAAA;AAEvCC,IAAAA,QAAQ,EAF+B,QAAA;AAGvCC,IAAAA,UAAU,EAAE;AAH2B,GAAzC;AAKA,MAAIC,UAAU,GAAGpD,KAAK,CAAtB,KAAA;AACA,MAAIqD,WAAW,GAAGrD,KAAK,CAAvB,MAAA,CAjKyB,CAiKzB;;AAEA,MAAIoD,UAAU,GAAG5B,WAAW,CAA5B,KAAA,EAAoC;AAClC,QAAM8B,KAAK,GAAG9B,WAAW,CAAXA,KAAAA,GAAd,UAAA;AACA6B,IAAAA,WAAW,IAAXA,KAAAA;AACAD,IAAAA,UAAU,IAAVA,KAAAA;AACD;;AACD,MAAIC,WAAW,GAAG7B,WAAW,CAA7B,MAAA,EAAsC;AACpC,QAAM8B,MAAK,GAAG9B,WAAW,CAAXA,MAAAA,GAAd,WAAA;;AACA6B,IAAAA,WAAW,IAAXA,MAAAA;AACAD,IAAAA,UAAU,IAAVA,MAAAA;AACD;;AAED,MAAIC,WAAW,GAAXA,UAAAA,IAA4BD,UAAU,GAAG5B,WAAW,CAAxD,KAAA,EAAgE;AAC9DwB,IAAAA,iBAAiB,CAAjBA,IAAAA,GAAyB,CAACxB,WAAW,CAAXA,KAAAA,GAAD,UAAA,IAAzBwB,CAAAA;AACAA,IAAAA,iBAAiB,CAAjBA,MAAAA,GAA2BxB,WAAW,CAAtCwB,MAAAA;AACAA,IAAAA,iBAAiB,CAAjBA,KAAAA,GAAAA,UAAAA;AAHF,GAAA,MAIO;AACLA,IAAAA,iBAAiB,CAAjBA,GAAAA,GAAwB,CAACxB,WAAW,CAAXA,MAAAA,GAAD,WAAA,IAAxBwB,CAAAA;AACAA,IAAAA,iBAAiB,CAAjBA,MAAAA,GAAAA,WAAAA;AACAA,IAAAA,iBAAiB,CAAjBA,KAAAA,GAA0BxB,WAAW,CAArCwB,KAAAA;AACD;;AACD,MAAIxB,WAAW,CAAXA,MAAAA,GAAJ,WAAA,EAAsC;AACpCwB,IAAAA,iBAAiB,CAAjBA,MAAAA,GAAAA,WAAAA;AACAA,IAAAA,iBAAiB,CAAjBA,GAAAA,GAAwB,CAACxB,WAAW,CAAXA,MAAAA,GAAD,WAAA,IAAxBwB,CAAAA;AAFF,GAAA,MAGO,IAAIxB,WAAW,CAAXA,KAAAA,GAAJ,UAAA,EAAoC;AACzCwB,IAAAA,iBAAiB,CAAjBA,MAAAA,GAA2BxB,WAAW,CAAtCwB,MAAAA;AACAA,IAAAA,iBAAiB,CAAjBA,IAAAA,GAAyB,CAACxB,WAAW,CAAXA,KAAAA,GAAD,UAAA,IAAzBwB,CAAAA;AACD;;AAED,SAAO3B,UAAU,IAAIF,YAAY,CAA1BE,OAAAA,GACH,QAAQ,CAAR,YAAA,CACE,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACElD,IAAAA,SAAS,EAAEoF,EAAE,CAACjE,OAAO,CAAR,OAAA,EAAkB0B,UAAlB,KAAA,IAAkBA,IAAAA,UAAlB,KAAA,KAAA,CAAkBA,GAAlB,KAAA,CAAkBA,GAAAA,UAAU,CAA5B,OAAA,CADf;AAEEwC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAA,CACPlD,IAAI,GAAA,CAAA,qBAAA,GACAS,UADA,KAAA,IACAA,IAAAA,UADA,KAAA,KAAA,CACAA,GADA,KAAA,CACAA,GAAAA,UAAU,CADV,WAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAC2B1B,OAAO,CADlC,WAAA,GAAA,CAAA,sBAAA,GAEA0B,UAFA,KAAA,IAEAA,IAAAA,UAFA,KAAA,KAAA,CAEAA,GAFA,KAAA,CAEAA,GAAAA,UAAU,CAFV,YAAA,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,sBAAA,GAE4B1B,OAAO,CAHhC,YAAA,IAAA,GAAA,GAAA,iBAAA,GAAA;AADJ,KAFT;AASEoE,IAAAA,cAAc,EAAEX;AATlB,GAAA,EAWE,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAKS,IAAAA,KAAK,EAAER;AAAZ,GAAA,EACG,GAAG,CAAH,GAAA,CAAQ,UAAA,MAAA,EAAA,KAAA,EAAA;AAAA,QAAA,GAAA;;AAAA,WACP,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACEW,MAAAA,GAAG,EAAEC,KADP;AAEEpD,MAAAA,GAAG,EAAEqD,MAAM,CAACrD,GAFd;AAGEsD,MAAAA,GAAG,EAAED,MAAM,CAACC,GAHd;AAIExF,MAAAA,KAAK,EAAE0E,iBAAiB,CAAC1E,KAJ3B;AAKEC,MAAAA,MAAM,EAAEyE,iBAAiB,CAACzE,MAL5B;AAMEJ,MAAAA,SAAS,EAAEoF,EAAE,CAACjE,OAAO,CAAR,KAAA,EAAgB0B,UAAhB,KAAA,IAAgBA,IAAAA,UAAhB,KAAA,KAAA,CAAgBA,GAAhB,KAAA,CAAgBA,GAAAA,UAAU,CAA1B,KAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,CACV1B,OAAO,CADG,SAAA,CAAA,GACUsE,KAAK,KADf,QAAA,EAAA,GAAA;AANf,KAAA,CADO;AAZb,GAYK,CADH,CAXF,EAyBGnD,QAAQ,KAARA,CAAAA,IACC,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACEtC,IAAAA,SAAS,EAAEoF,EAAE,CAACjE,OAAO,CAAR,MAAA,EAAiBA,OAAO,CAAxB,UAAA,CADf;AAEEyE,IAAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,aAAM1B,iBAAiB,CAAChC,SAAS,CAAjC,IAAuB,CAAvB;AAAA;AAFX,GAAA,EAIE,cAAA,CAAA,aAAA,CAAA,eAAA,EAAA;AACElC,IAAAA,SAAS,EAAEoF,EAAE,CAACjE,OAAO,CAAR,WAAA,EAAsBA,OAAO,CAA7B,eAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,CACVA,OAAO,CADG,eAAA,CAAA,GAAA,SAAA,EAAA,IAAA;AADf,GAAA,CAJF,CA1BJ,EAqCGkB,GAAG,CAACC,QAAQ,GAAZD,CAAG,CAAHA,IACC,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACErC,IAAAA,SAAS,EAAEoF,EAAE,CAACjE,OAAO,CAAR,MAAA,EAAiBA,OAAO,CAAxB,WAAA,CADf;AAEEyE,IAAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,aAAM1B,iBAAiB,CAAChC,SAAS,CAAjC,IAAuB,CAAvB;AAAA;AAFX,GAAA,EAIE,cAAA,CAAA,aAAA,CAAA,eAAA,EAAA;AACElC,IAAAA,SAAS,EAAEoF,EAAE,CAACjE,OAAO,CAAR,WAAA,EAAsBA,OAAO,CAA7B,gBAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,CACVA,OAAO,CADG,eAAA,CAAA,GAAA,SAAA,EAAA,IAAA;AADf,GAAA,CAJF,CAtCJ,EAiDE,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAKyE,IAAAA,OAAO,EAAEjB;AAAd,GAAA,EACE,cAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AACE3E,IAAAA,SAAS,EAAEoF,EAAE,CAACjE,OAAO,CAAR,iBAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,CACVA,OAAO,CADG,eAAA,CAAA,GAAA,SAAA,EAAA,IAAA;AADf,GAAA,CADF,CAjDF,CADF,EA0DE6B,YAAY,CA3DXE,OACH,CADGA,GAAP,IAAA;AA/LK,CAAP","sourcesContent":["import React from 'react';\n\ninterface IconProps {\n  className?: string;\n}\n\nexport function CloseArrow({ className, ...props }: IconProps) {\n  return (\n    <div className={className} {...props}>\n      <svg fill=\"#ffffff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\">\n        <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\n      </svg>\n    </div>\n  );\n}\n\nexport function PrevArrowButton({ className, ...props }: IconProps) {\n  return (\n    <div className={className} {...props}>\n      <svg fill=\"#ffffff\" width=\"36px\" height=\"36px\" viewBox=\"0 0 24 24\">\n        <path d=\"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\" />\n      </svg>\n    </div>\n  );\n}\n\nexport function NextArrowButton({ className, ...props }: IconProps) {\n  return (\n    <div className={className} {...props}>\n      <svg fill=\"#ffffff\" width=\"36px\" height=\"36px\" viewBox=\"0 0 24 24\">\n        <path d=\"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\" />\n      </svg>\n    </div>\n  );\n}\n","import { useRef, useEffect } from 'react';\n\n// Inspired by https://usehooks.com/useEventListener/\n\nexport const useEventListener = <T>(\n  active: boolean,\n  eventName: string,\n  handler: (event: T) => void,\n  element: any\n) => {\n  // Create a ref that stores handler\n  const savedHandler = useRef<(event: T) => void>();\n\n  // Update ref.current value if handler changes.\n  // This allows our effect below to always get latest handler ...\n  // ... without us needing to pass it in effect deps array ...\n  // ... and potentially cause effect to re-run every render.\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(\n    () => {\n      if (!element || !element.addEventListener) {\n        return;\n      }\n\n      // Create event listener that calls handler function stored in ref\n      const eventListener = (event: T) => savedHandler.current!(event);\n\n      if (active) {\n        // Add event listener\n        element.addEventListener(eventName, eventListener);\n      }\n\n      // Remove event listener on cleanup\n      return () => {\n        element.removeEventListener(eventName, eventListener);\n      };\n    },\n    // Re-run if eventName or element changes\n    [active, eventName, element]\n  );\n};\n","import React, { useState, useRef, useEffect, CSSProperties } from 'react';\nimport ReactDom from 'react-dom';\nimport noScroll from 'no-scroll';\nimport cx from 'classnames';\nimport screenfull from 'screenfull';\nimport { CloseArrow, PrevArrowButton, NextArrowButton } from './arrow';\nimport { useEventListener } from './useEventListener';\n\nconst keycodes = {\n  esc: 27,\n  left: 37,\n  right: 39,\n};\n\nconst classes = {\n  overlay: 'react-google-photo-overlay',\n  column: 'react-google-photo-column',\n  leftColumn: 'react-google-photo-left-column',\n  rightColumn: 'react-google-photo-right-column',\n  arrowButton: 'react-google-photo-arrow-button',\n  arrowButtonHide: 'react-google-photo-arrow-button-hide',\n  arrowButtonLeft: 'react-google-photo-arrow-button-left',\n  arrowButtonRight: 'react-google-photo-arrow-button-right',\n  arrowButtonReturn: 'react-google-photo-arrow-button-return',\n  image: 'react-google-photo-overlay-image',\n  imageOpen: 'react-google-photo-overlay-image-open',\n  animationIn: 'react-google-photo-fade-in',\n  animationOut: 'react-google-photo-fade-out',\n};\n\nconst isBrowser = typeof window !== 'undefined';\n\nenum Direction {\n  Prev,\n  Next,\n}\n\ninterface GooglePhotoProps {\n  /**\n   * Control if GooglePhoto is open or not.\n   */\n  open: boolean;\n  /**\n   * An array containing valid images\n   */\n  src: {\n    /**\n     * Url of the media.\n     */\n    src: string;\n    /**\n     * Height of the media.\n     */\n    height: number;\n    /**\n     * Width of the media.\n     */\n    width: number;\n    /**\n     * Alt of the media.\n     */\n    alt?: string;\n  }[];\n  /**\n   * Index of source to display.\n   */\n  srcIndex?: number;\n  /**\n   * Should open on fullscreen mode.\n   * Default to false.\n   */\n  fullscreen?: boolean;\n  /**\n   * Enable left and right arrow navigation.\n   * Default to true.\n   */\n  keyboardNavigation?: boolean;\n  /**\n   * Should close when user press esc key.\n   * Default to true.\n   */\n  closeOnEsc?: boolean;\n  /**\n   * Timeout before hidding the actions buttons when mouse do not move (milliseconds).\n   * Default to 5000.\n   */\n  mouseIdleTimeout?: number;\n  /**\n   * Animation duration in milliseconds.\n   * Default to 250.\n   */\n  animationDuration?: number;\n  /**\n   * An object containing classNames to style the lightbox.\n   */\n  classNames?: {\n    overlay?: string;\n    image?: string;\n    animationIn?: string;\n    animationOut?: string;\n  };\n  /**\n   * Function called when GooglePhoto is requested to be closed.\n   */\n  onClose: () => void;\n  /**\n   * Function called when the index of the displayed image is changing.\n   */\n  onChangeIndex?: (index: number) => void;\n}\n\nexport const GooglePhoto = ({\n  open,\n  src,\n  srcIndex: srcIndexProp = 0,\n  fullscreen,\n  keyboardNavigation = true,\n  closeOnEsc = true,\n  mouseIdleTimeout = 5000,\n  animationDuration = 250,\n  classNames,\n  onClose,\n  onChangeIndex,\n}: GooglePhotoProps) => {\n  const refContainer = useRef<HTMLDivElement | null>(null);\n  const refTimeoutMouseIdle = useRef<NodeJS.Timeout | null>(null);\n  const [showPortal, setShowPortal] = useState(open);\n  const [windowSizes, setWindowSizes] = useState<{\n    width: number;\n    height: number;\n  }>({\n    width: isBrowser ? window.innerWidth : 0,\n    height: isBrowser ? window.innerHeight : 0,\n  });\n  const [mouseIdle, setMouseIdle] = useState(false);\n  const [srcIndex, setSrcIndex] = useState(srcIndexProp);\n\n  // Lazily create the ref instance\n  // https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n  if (refContainer.current === null && isBrowser) {\n    refContainer.current = document.createElement('div');\n  }\n\n  const handleOpen = () => {\n    noScroll.on();\n    window.addEventListener('resize', handleWindowResize);\n    if (refContainer.current && !document.body.contains(refContainer.current)) {\n      document.body.appendChild(refContainer.current);\n    }\n    if (fullscreen && screenfull.isEnabled) {\n      screenfull.request();\n      screenfull.on('change', handleScreenfullChange);\n    }\n  };\n\n  const handleClose = () => {\n    window.removeEventListener('resize', handleWindowResize);\n    if (refContainer.current && document.body.contains(refContainer.current)) {\n      document.body.removeChild(refContainer.current);\n    }\n    if (screenfull.isEnabled) {\n      screenfull.exit();\n      screenfull.off('change', handleScreenfullChange);\n    }\n    noScroll.off();\n  };\n\n  const handleKeydown = (e: KeyboardEvent) => {\n    if (e.keyCode === keycodes.left && keyboardNavigation) {\n      handleChangeIndex(Direction.Prev);\n    } else if (e.keyCode === keycodes.right && keyboardNavigation) {\n      handleChangeIndex(Direction.Next);\n    } else if (e.keyCode === keycodes.esc && closeOnEsc) {\n      onClose();\n    }\n  };\n\n  useEventListener(\n    open,\n    'keydown',\n    handleKeydown,\n    isBrowser ? document : undefined\n  );\n\n  const handleMousemove = () => {\n    // Hide the actions buttons when move do not move for x seconds\n    if (refTimeoutMouseIdle.current) {\n      clearTimeout(refTimeoutMouseIdle.current);\n    }\n    if (mouseIdle === true) {\n      setMouseIdle(false);\n    }\n    refTimeoutMouseIdle.current = setTimeout(() => {\n      setMouseIdle(true);\n    }, mouseIdleTimeout);\n  };\n\n  useEventListener(\n    open,\n    'mousemove',\n    handleMousemove,\n    isBrowser ? document.querySelector('*')! : undefined\n  );\n\n  // We listen to the srcIndexProp to update the internal state if the user manage the component\n  useEffect(() => {\n    setSrcIndex(srcIndexProp);\n  }, [srcIndexProp]);\n\n  useEffect(() => {\n    // When the modal is rendered first time we want to block the scroll\n    if (open) {\n      handleOpen();\n    }\n    return () => {\n      // When the component is unmounted directly we want to unblock the scroll\n      if (showPortal) {\n        handleClose();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    // If the open prop is changing, we need to open the modal\n    if (open && !showPortal) {\n      setShowPortal(true);\n      handleOpen();\n    }\n  }, [open]);\n\n  const handleScreenfullChange = () => {\n    if (screenfull.isEnabled && !screenfull.isFullscreen && open) {\n      onClose();\n    }\n  };\n\n  const handleWindowResize = () => {\n    setWindowSizes({ width: window.innerWidth, height: window.innerHeight });\n  };\n\n  const handleChangeIndex = (direction: Direction) => {\n    if (direction === Direction.Prev && srcIndex !== 0) {\n      const newIndex = srcIndex - 1;\n      onChangeIndex ? onChangeIndex(newIndex) : setSrcIndex(newIndex);\n    } else if (direction === Direction.Next && src[srcIndex + 1]) {\n      const newIndex = srcIndex + 1;\n      onChangeIndex ? onChangeIndex(newIndex) : setSrcIndex(newIndex);\n    }\n  };\n\n  const handleClickCloseArrow = () => {\n    onClose();\n  };\n\n  const handleAnimationEnd = () => {\n    if (!open) {\n      setShowPortal(false);\n      handleClose();\n    }\n\n    // if (onAnimationEnd) {\n    //   onAnimationEnd();\n    // }\n  };\n\n  const image = src[srcIndex];\n  const wrapperImageStyle: CSSProperties = {\n    position: 'absolute',\n    overflow: 'hidden',\n    userSelect: 'none',\n  };\n  let imageWidth = image.width;\n  let imageHeight = image.height;\n  // Adjust image ratio max with window size\n  if (imageWidth > windowSizes.width) {\n    const ratio = windowSizes.width / imageWidth;\n    imageHeight *= ratio;\n    imageWidth *= ratio;\n  }\n  if (imageHeight > windowSizes.height) {\n    const ratio = windowSizes.height / imageHeight;\n    imageHeight *= ratio;\n    imageWidth *= ratio;\n  }\n\n  if (imageHeight > imageWidth || imageWidth < windowSizes.width) {\n    wrapperImageStyle.left = (windowSizes.width - imageWidth) / 2;\n    wrapperImageStyle.height = windowSizes.height;\n    wrapperImageStyle.width = imageWidth;\n  } else {\n    wrapperImageStyle.top = (windowSizes.height - imageHeight) / 2;\n    wrapperImageStyle.height = imageHeight;\n    wrapperImageStyle.width = windowSizes.width;\n  }\n  if (windowSizes.height > imageHeight) {\n    wrapperImageStyle.height = imageHeight;\n    wrapperImageStyle.top = (windowSizes.height - imageHeight) / 2;\n  } else if (windowSizes.width > imageWidth) {\n    wrapperImageStyle.height = windowSizes.height;\n    wrapperImageStyle.left = (windowSizes.width - imageWidth) / 2;\n  }\n\n  return showPortal && refContainer.current\n    ? ReactDom.createPortal(\n        <div\n          className={cx(classes.overlay, classNames?.overlay)}\n          style={{\n            animation: `${\n              open\n                ? classNames?.animationIn ?? classes.animationIn\n                : classNames?.animationOut ?? classes.animationOut\n            } ${animationDuration}ms`,\n          }}\n          onAnimationEnd={handleAnimationEnd}\n        >\n          <div style={wrapperImageStyle}>\n            {src.map((source, index) => (\n              <img\n                key={index}\n                src={source.src}\n                alt={source.alt}\n                width={wrapperImageStyle.width}\n                height={wrapperImageStyle.height}\n                className={cx(classes.image, classNames?.image, {\n                  [classes.imageOpen]: index === srcIndex,\n                })}\n              />\n            ))}\n          </div>\n          {srcIndex !== 0 && (\n            <div\n              className={cx(classes.column, classes.leftColumn)}\n              onClick={() => handleChangeIndex(Direction.Prev)}\n            >\n              <PrevArrowButton\n                className={cx(classes.arrowButton, classes.arrowButtonLeft, {\n                  [classes.arrowButtonHide]: mouseIdle,\n                })}\n              />\n            </div>\n          )}\n          {src[srcIndex + 1] && (\n            <div\n              className={cx(classes.column, classes.rightColumn)}\n              onClick={() => handleChangeIndex(Direction.Next)}\n            >\n              <NextArrowButton\n                className={cx(classes.arrowButton, classes.arrowButtonRight, {\n                  [classes.arrowButtonHide]: mouseIdle,\n                })}\n              />\n            </div>\n          )}\n          <div onClick={handleClickCloseArrow}>\n            <CloseArrow\n              className={cx(classes.arrowButtonReturn, {\n                [classes.arrowButtonHide]: mouseIdle,\n              })}\n            />\n          </div>\n        </div>,\n        refContainer.current\n      )\n    : null;\n};\n"]},"metadata":{},"sourceType":"script"}